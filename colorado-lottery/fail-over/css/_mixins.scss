/*
 * Mixins SCSS File - SCSS v1.0
 * last edited 07/21/14
 * @author Justin Stollsteimer - Fusionbox, Inc. 
 * http://www.fusionbox.com
 *
 */
 
@mixin box-sizing {
   -webkit-box-sizing: border-box;
   -moz-box-sizing: border-box;
   box-sizing: border-box;
}

@mixin shadow($color: rgba(0,0,0,0.3), $left: 0px, $top: 0px, $blur: 8px) {
  box-shadow: $left $top $blur $color;
    -o-box-shadow: $left $top $blur $color;
    -ms-box-shadow: $left $top $blur $color;
    -moz-box-shadow: $left $top $blur $color;
    -webkit-box-shadow: $left $top $blur $color;
}

@mixin inset-shadow($color: rgba(0,0,0,0.3), $left: 0px, $top: 0px, $blur: 8px) {
  box-shadow: inset $left $top $blur $color;
    -o-box-shadow: inset $left $top $blur $color;
    -ms-box-shadow: inset $left $top $blur $color;
    -moz-box-shadow: inset $left $top $blur $color;
    -webkit-box-shadow: inset $left $top $blur $color;
}

@mixin text-shadow($color: #333333, $left: 0px, $top: 0px, $blur: 8px) {
  text-shadow: $left $top $blur $color;
    -o-text-shadow: $left $top $blur $color;
    -moz-text-shadow: $left $top $blur $color;
    -webkit-text-shadow: $left $top $blur $color;
}

@mixin multi-shadow($shadow) {
  box-shadow: #{$shadow};
    -o-box-shadow: #{$shadow};
    -ms-box-shadow: #{$shadow};
    -moz-box-shadow: #{$shadow};
    -webkit-box-shadow: #{$shadow};
}

@mixin rounded($radius) {
  border-radius: $radius;
    -o-border-radius: $radius;
    -ms-border-radius: $radius;
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
}

@mixin gradient($bottom,$top) {
  background-color: $bottom;
    background-image: -o-linear-gradient(center bottom, $bottom 1%, $top 100%);
    background-image: -ms-linear-gradient(center bottom, $bottom 1%, $top 100%);
    background-image: -moz-linear-gradient(center bottom, $bottom 1%, $top 100%);
    background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.01, $bottom), color-stop(1.00, $top));
}

@mixin hgradient($left,$right) {
  background-color: $right;
    background-image: -o-linear-gradient(left, $left 1%, $right 100%);
    background-image: -ms-linear-gradient(left, $left 1%, $right 100%);
    background-image: -moz-linear-gradient(left, $left 1%, $right 100%);
    background-image: -webkit-gradient(linear, left top, right top, color-stop(0.01, $left), color-stop(1.00, $right));
}

@mixin half-gradient-left($left,$right) {
  background-color: $right;
    background-image: -o-linear-gradient(left, $left 1%, $right 50%);
    background-image: -ms-linear-gradient(left, $left 1%, $right 50%);
    background-image: -moz-linear-gradient(left, $left 1%, $right 50%);
    background-image: -webkit-gradient(linear, left top, right top, color-stop(0.01, $left), color-stop(0.50, $right));
}

@mixin half-gradient-right($left,$right) {
  background-color: $right;
    background-image: -o-linear-gradient(left, $left 50%, $right 100%);
    background-image: -ms-linear-gradient(left, $left 50%, $right 100%);
    background-image: -moz-linear-gradient(left, $left 50%, $right 100%);
    background-image: -webkit-gradient(linear, left top, right top, color-stop(0.5, $left), color-stop(1.00, $right));
}

@mixin overlay($bottom,$top) {
  background-image: -o-linear-gradient(center bottom, $bottom 1%, $top 50%);
  background-image: -ms-linear-gradient(center bottom, $bottom 1%, $top 50%);
  background-image: -moz-linear-gradient(center bottom, $bottom 1%, $top 50%);
  background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0.01, $bottom), color-stop(0.50, $top));
}

@mixin transition($basic: all 0.25s ease 0s) {
  transition: #{$basic};
    -o-transition: #{$basic};
    -ms-transition: #{$basic};
    -moz-transition: #{$basic};
    -webkit-transition: #{$basic};
}

@mixin delay($time: 0.5s)
{
  animation-delay: $time;
  -o-animation-delay: $time;
  -ms-animation-delay: $time;
  -moz-animation-delay: $time;
  -webkit-animation-delay: $time;
}

@mixin transform($transformation)
{
  transform: #{$transformation};
  -o-transform: #{$transformation};
  -ms-transform: #{$transformation};
  -moz-transform: #{$transformation};
  -webkit-transform: #{$transformation};
}

@mixin transform-origin($transformationorigin)
{
  transform-origin: #{$transformationorigin};
  -o-transform-origin: #{$transformationorigin};
  -ms-transform-origin: #{$transformationorigin};
  -moz-transform-origin: #{$transformationorigin};
  -webkit-transform-origin: #{$transformationorigin};
}

@mixin wrapper {
  display: block;
  height: auto;
  position: relative;
  width: 100%;
  z-index: 1;
}

@mixin inner {
  display: block;
  margin: 0 auto;
  padding: 0px;
}

@mixin default {
  display: inline;
  float: left;
  height: auto;
  width: 100%;
}

@mixin clearfix {
  &:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
  * html & { height: 1px }
}

@mixin html {
  h1, h2, h3, h4, h5, h6, p, blockquote, ol, ul, hgroup, hr {
    display: block !important;
    float: none !important;
    margin: 0px 0px 15px 0px !important;
    width: auto !important;
  }
  .fl { float: left; margin: 0px 25px 15px 0px; }
  .fr { float: right; margin: 0px 0px 15px 25px; }
  img { &.left { float: left; margin: 5px 25px 15px 0px; } &.right { float: right; margin: 5px 0px 15px 25px; }}
  table { display: table; width: 100% !important; }
}

@mixin flex-box {
  display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
  display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
  display: -ms-flexbox;      /* TWEENER - IE 10 */
  display: -webkit-flex;     /* NEW - Chrome */
  display: flex;  
}

@mixin flex($col: 1) {
  -webkit-box-flex: $col;      /* OLD - iOS 6-, Safari 3.1-6 */
  -moz-box-flex: $col;         /* OLD - Firefox 19- */
  -webkit-flex: $col;          /* Chrome */
  -ms-flex: $col;              /* IE 10 */
  flex: $col;                  /* NEW, Spec - Opera 12.1, Firefox 20+ */
}

@mixin bp($point) {
  @if ($MQs) {
    $bp-small: "(max-width: 640px)";
    $bp-medium: "(max-width: 900px)";
    $bp-large: "(max-width: 1100px)";
  
    @if $point == large {
      @media #{$bp-large} { @content; }
    }
    @else if $point == medium {
      @media #{$bp-medium} { @content; }
    }
    @else if $point == small {
      @media #{$bp-small}  { @content; }
    }
  }
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

@mixin vertical-align-parent {
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

@mixin horizontal-align {
  position: relative;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

@mixin horizontal-align-parent {
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  transform-style: preserve-3d;
}